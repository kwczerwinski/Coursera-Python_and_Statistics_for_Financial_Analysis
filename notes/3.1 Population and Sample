import pandas as pd

# Population - group of individuals with common property
# Sample - small randomly selected group of population
# Random sampling - with or without replacement (after selecting individual indclude this one for next selection?)

data = pd.DataFrame()
data['population'] = [47, 48, 85, 20, 19, 13, 72, 16, 50, 60]

sample_no_replacement = data['population'].sample(5, replace=False)  # replace=False by default
sample_with_replacement = data['population'].sample(5, replace=True)
print(sample_no_replacement)  # never the same number chosen
print(sample_with_replacement)  # sometimes numbers will repeat

# Characteristics like mean, variance etc. are named as parameters for populations, but as statitics in samples.
# With fixed population parameters will never change.
print('\nPopulation parameters:'
      '\n              mean: ', data['population'].mean(),
      '\nstandard deviation: ', data['population'].std(ddof=0),
      '\n          variance: ', data['population'].var(ddof=0),
      # ddof sets denominator for variance and standard deviation, ddof=0 means that denominator equals population size
      '\n              size: ', data['population'].shape[0])
print('\nSample statistics:'
      '\n              mean: ', sample_with_replacement.mean(),
      '\nstandard deviation: ', sample_with_replacement.std(ddof=1),
      '\n          variance: ', sample_with_replacement.var(ddof=1),
      # ddof=1 means that denominator equals (sample size - 1)
      # why ddof is different for populations and samples? because math says that it is better that way ;)
      '\n              size: ', sample_with_replacement.shape[0])
