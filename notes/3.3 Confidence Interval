# Confidence interval for daily return
from scipy.stats import norm

data = pd.read_csv('data/TRADEGATE%DGD=D.csv', sep='\t',
                   names=('timestamp', 'open', 'high', 'low', 'close', 'volume', 'is_generated'))
data = data[data['is_generated'] < 1]
data['log_return'] = np.log(data['close']) - np.log(data['close'].shift(1))
# values for calculating the 80% confidence interval
confidence = 0.8
left_bound = (1 - confidence) / 2
right_bound = 1 - left_bound
z_left = norm.ppf(left_bound)
z_right = norm.ppf(right_bound)  # z_right = -z_left for Z-distribution
sample_mean = data['log_return'].mean()
sample_std = data['log_return'].std(ddof=1) / (data.shape[0] ** 0.5)
# assumptions for sample_std:
# - prices are not correlated between each other - false, prices are usually strongly correlated
# - this sample_std math is used when we have sample with replacement,
#   or sample is less than 5% (maybe 10%) of total population
interval_left = sample_mean + z_left * sample_std  # can be converted to norm.ppf(left_bound, sample_mean, sample_std)
interval_right = sample_mean + z_right * sample_std
print('\nSample stats:'
      '\n          mean: ', sample_mean,
      '\n           std: ', sample_std,
      '\n interval left: ', interval_left,
      '\ninterval right: ', interval_right)